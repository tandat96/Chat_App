{"ast":null,"code":"import _regeneratorRuntime from \"d:\\\\Real-time-private-chatting-app-using-React-Nodejs-mongodb-and-Socket.io\\\\React App\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"d:\\\\Real-time-private-chatting-app-using-React-Nodejs-mongodb-and-Socket.io\\\\React App\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"d:\\\\Real-time-private-chatting-app-using-React-Nodejs-mongodb-and-Socket.io\\\\React App\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\Real-time-private-chatting-app-using-React-Nodejs-mongodb-and-Socket.io\\\\React App\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\Real-time-private-chatting-app-using-React-Nodejs-mongodb-and-Socket.io\\\\React App\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\Real-time-private-chatting-app-using-React-Nodejs-mongodb-and-Socket.io\\\\React App\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\Real-time-private-chatting-app-using-React-Nodejs-mongodb-and-Socket.io\\\\React App\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\Real-time-private-chatting-app-using-React-Nodejs-mongodb-and-Socket.io\\\\React App\\\\src\\\\pages\\\\home\\\\Home.js\";\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport ChatSocketServer from '../../utils/ChatSocketServer.js';\nimport ChatHttpServer from '../../utils/chatHttpServer.js';\nimport ChatList from './chat-list/ChatList';\nimport Conversation from './conversation/Conversation';\nimport './Home.css';\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.userId = null;\n    _this.state = {\n      isOverlayVisible: true,\n      username: '______',\n      selectedUser: null\n    };\n    _this.logout =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return ChatHttpServer.removeLS();\n\n            case 3:\n              ChatSocketServer.logout({\n                userId: _this.userId\n              });\n              ChatSocketServer.eventEmitter.on('logout-response', function (loggedOut) {\n                _this.props.history.push(\"/\");\n              });\n              _context.next = 12;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n              alert(' This App is Broken, we are working on it. try after some time.');\n              throw _context.t0;\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    _this.setRenderLoadingState = function (loadingState) {\n      _this.setState({\n        isOverlayVisible: loadingState\n      });\n    };\n\n    _this.updateSelectedUser = function (user) {\n      _this.setState({\n        selectedUser: user\n      });\n    };\n\n    _this.getChatBoxComponent = function () {\n      return _this.state.isOverlayVisible ? null : React.createElement(Conversation, {\n        userId: _this.userId,\n        newSelectedUser: _this.state.selectedUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                this.setRenderLoadingState(true);\n                _context2.next = 4;\n                return ChatHttpServer.getUserId();\n\n              case 4:\n                this.userId = _context2.sent;\n                _context2.next = 7;\n                return ChatHttpServer.userSessionCheck(this.userId);\n\n              case 7:\n                response = _context2.sent;\n\n                if (response.error) {\n                  this.props.history.push(\"/\");\n                } else {\n                  this.setState({\n                    username: response.username\n                  });\n                  ChatHttpServer.setLS('username', response.username);\n                  ChatSocketServer.establishSocketConnection(this.userId);\n                }\n\n                this.setRenderLoadingState(false);\n                _context2.next = 16;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](0);\n                this.setRenderLoadingState(false);\n                this.props.history.push(\"/\");\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 12]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"getChatListComponent\",\n    value: function getChatListComponent() {\n      return this.state.isOverlayVisible ? null : React.createElement(ChatList, {\n        userId: this.userId,\n        updateSelectedUser: this.updateSelectedUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\".concat(this.state.isOverlayVisible ? 'overlay' : 'visibility-hidden', \" \"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Loading\")), React.createElement(\"header\", {\n        className: \"app-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-expand-md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Hello \", this.state.username, \" \")), React.createElement(\"ul\", {\n        className: \"nav justify-content-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"nav-link\",\n        href: \"#\",\n        onClick: this.logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Logout\")))), React.createElement(\"main\", {\n        role: \"main\",\n        className: \"container content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row chat-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-3 chat-list-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, this.getChatListComponent()), React.createElement(\"div\", {\n        className: \"col-8 message-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, this.getChatBoxComponent()))));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport default withRouter(Home);","map":{"version":3,"sources":["d:\\Real-time-private-chatting-app-using-React-Nodejs-mongodb-and-Socket.io\\React App\\src\\pages\\home\\Home.js"],"names":["React","Component","withRouter","ChatSocketServer","ChatHttpServer","ChatList","Conversation","Home","userId","state","isOverlayVisible","username","selectedUser","logout","removeLS","eventEmitter","on","loggedOut","props","history","push","console","log","alert","setRenderLoadingState","loadingState","setState","updateSelectedUser","user","getChatBoxComponent","getUserId","userSessionCheck","response","error","setLS","establishSocketConnection","getChatListComponent"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport ChatSocketServer from '../../utils/ChatSocketServer.js';\r\nimport ChatHttpServer from '../../utils/chatHttpServer.js';\r\n\r\nimport ChatList from './chat-list/ChatList';\r\nimport Conversation from './conversation/Conversation';\r\n\r\nimport './Home.css';\r\n\r\nclass Home extends Component {\r\n  userId = null;\r\n  state = {\r\n    isOverlayVisible: true,\r\n    username: '______',\r\n    selectedUser: null\r\n  }\r\n\r\n  logout = async () => {\r\n    try {\r\n      await ChatHttpServer.removeLS();\r\n      ChatSocketServer.logout({\r\n        userId: this.userId\r\n      });\r\n      ChatSocketServer.eventEmitter.on('logout-response', (loggedOut) => {\r\n        this.props.history.push(`/`);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(' This App is Broken, we are working on it. try after some time.');\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  setRenderLoadingState = (loadingState) => {\r\n    this.setState({\r\n      isOverlayVisible: loadingState\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      this.setRenderLoadingState(true);\r\n      this.userId = await ChatHttpServer.getUserId();\r\n      const response = await ChatHttpServer.userSessionCheck(this.userId);\r\n      if (response.error) {\r\n        this.props.history.push(`/`)\r\n      } else {\r\n        this.setState({\r\n          username: response.username\r\n        });\r\n        ChatHttpServer.setLS('username', response.username);\r\n        ChatSocketServer.establishSocketConnection(this.userId);\r\n      }\r\n      this.setRenderLoadingState(false);\r\n    } catch (error) {\r\n      this.setRenderLoadingState(false);\r\n      this.props.history.push(`/`)\r\n    }\r\n  }\r\n\r\n  updateSelectedUser = (user) => {\r\n    this.setState({\r\n      selectedUser: user\r\n    });\r\n  }\r\n\r\n  getChatListComponent() {\r\n    return this.state.isOverlayVisible ? null : <ChatList userId={this.userId} updateSelectedUser={this.updateSelectedUser}/>\r\n  }\r\n\r\n  getChatBoxComponent = () => {\r\n    return this.state.isOverlayVisible ? null : <Conversation userId={this.userId} newSelectedUser={this.state.selectedUser}/>\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className = {`${this.state.isOverlayVisible ? 'overlay': 'visibility-hidden' } `}>\r\n          <h1>Loading</h1>\r\n        </div>\r\n        <header className=\"app-header\">\r\n          <nav className=\"navbar navbar-expand-md\">\r\n            <h4>Hello {this.state.username} </h4>\r\n          </nav>\r\n          <ul className=\"nav justify-content-end\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\" onClick={this.logout}>Logout</a>\r\n            </li>\r\n          </ul>\r\n        </header>\r\n\r\n        <main role=\"main\" className=\"container content\" >\r\n          <div className=\"row chat-content\">\r\n            <div className=\"col-3 chat-list-container\">\r\n              {this.getChatListComponent()}\r\n            </div>\r\n            <div className=\"col-8 message-container\">\r\n              {this.getChatBoxComponent()}\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Home)\r\n"]},"metadata":{},"sourceType":"module"}